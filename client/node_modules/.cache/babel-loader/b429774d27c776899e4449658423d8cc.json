{"ast":null,"code":"import axios from \"axios\";\nimport { POST_LOADING, GET_POSTS, ADD_POST, DELETE_POST, GET_ERRORS } from \"./types\"; // Add Post\n\nexport var addPost = function addPost(newPost) {\n  return function (dispatch) {\n    axios.post(\"/api/posts/newpost\", newPost).then(function (res) {\n      dispatch({\n        type: ADD_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Add Like\n\nexport var addLike = function addLike(id) {\n  return function (dispatch) {\n    axios.post(\"api/posts/like/\".concat(id)).then(function (res) {\n      dispatch(getPosts());\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Remove Like\n\nexport var removeLike = function removeLike(id) {\n  return function (dispatch) {\n    axios.post(\"api/posts/dislike/\".concat(id)).then(function (res) {\n      dispatch(getPosts());\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Get  Posts\n\nexport var getPosts = function getPosts() {\n  return function (dispatch) {\n    dispatch(setPostLoading());\n    axios.get(\"/api/posts\").then(function (res) {\n      dispatch({\n        type: GET_POSTS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: GET_POSTS,\n        payload: null\n      });\n    });\n  };\n}; //set post loading state\n\nexport var setPostLoading = function setPostLoading() {\n  return {\n    type: POST_LOADING\n  };\n}; //Delete Post by (post._id)\n\nexport var deletePost = function deletePost(id) {\n  return function (dispatch) {\n    axios.delete(\"/api/posts/\".concat(id)).then(function (res) {\n      dispatch({\n        type: DELETE_POST,\n        payload: id\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\oleg\\fullStack\\fullStack\\client\\src\\actions\\postAction.js"],"names":["axios","POST_LOADING","GET_POSTS","ADD_POST","DELETE_POST","GET_ERRORS","addPost","newPost","dispatch","post","then","res","type","payload","data","catch","err","response","addLike","id","getPosts","removeLike","setPostLoading","get","deletePost","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nimport {\r\n  POST_LOADING,\r\n  GET_POSTS,\r\n  ADD_POST,\r\n  DELETE_POST,\r\n  GET_ERRORS\r\n} from \"./types\";\r\n\r\n// Add Post\r\n\r\nexport const addPost = newPost => dispatch => {\r\n  axios\r\n    .post(\"/api/posts/newpost\", newPost)\r\n    .then(res => {\r\n      dispatch({\r\n        type: ADD_POST,\r\n        payload: res.data\r\n      });\r\n    })\r\n\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n// Add Like\r\n\r\nexport const addLike = id => dispatch => {\r\n  axios\r\n    .post(`api/posts/like/${id}`)\r\n    .then(res => {\r\n      dispatch(getPosts());\r\n    })\r\n\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n// Remove Like\r\n\r\nexport const removeLike = id => dispatch => {\r\n  axios\r\n    .post(`api/posts/dislike/${id}`)\r\n    .then(res => {\r\n      dispatch(getPosts());\r\n    })\r\n\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n// Get  Posts\r\n\r\nexport const getPosts = () => dispatch => {\r\n  dispatch(setPostLoading());\r\n  axios\r\n    .get(\"/api/posts\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_POSTS,\r\n        payload: res.data\r\n      });\r\n    })\r\n\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_POSTS,\r\n        payload: null\r\n      });\r\n    });\r\n};\r\n//set post loading state\r\nexport const setPostLoading = () => {\r\n  return {\r\n    type: POST_LOADING\r\n  };\r\n};\r\n\r\n//Delete Post by (post._id)\r\nexport const deletePost = id => dispatch => {\r\n  axios\r\n    .delete(`/api/posts/${id}`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: DELETE_POST,\r\n        payload: id\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}