{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getCurrentProfile } from \"../../actions/profileAction\";\nimport Spinner from \"../layout/Spinner\";\nimport ProfileActions from \"./ProfileActions\";\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    _classCallCheck(this, Dashboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).apply(this, arguments));\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props);\n      this.props.getCurrentProfile();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      var user = this.props.auth.user;\n      var _this$props$profile = this.props.profile,\n          profile = _this$props$profile.profile,\n          loading = _this$props$profile.loading;\n      var dashboardContent;\n\n      if (profile === null || loading) {\n        dashboardContent = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        });\n      } else {\n        //check for profile\n        if (Object.keys(profile).length > 0) {\n          //user has profile\n          dashboardContent = React.createElement(\"div\", {\n            className: \"mt-3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, \"Welcome\", \" \", React.createElement(\"small\", {\n            className: \"muted\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/profile/\".concat(profile.handle),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, \" \", user.name, \" \"))));\n        } else {\n          dashboardContent = React.createElement(\"div\", {\n            className: \"mt-3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, \"Welcome \", React.createElement(\"small\", {\n            className: \"muted\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, user.name)), React.createElement(\"p\", {\n            className: \"muted\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }, \"You have not set profile yet. You can create a new profile\", \" \", React.createElement(Link, {\n            to: \"/create-profile\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, \"here\"), \".\"));\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"main_height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12 mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"display-4 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Dashboard\"), dashboardContent))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nDashboard.propTypes = {\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile,\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile: getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["C:\\Users\\oleg\\fullStack\\fullStack\\client\\src\\components\\dashboard\\Dashboard.js"],"names":["React","Component","Link","PropTypes","connect","getCurrentProfile","Spinner","ProfileActions","Dashboard","console","log","props","user","auth","profile","loading","dashboardContent","Object","keys","length","handle","name","propTypes","object","isRequired","func","mapStateToProps","state","errors"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentProfile } from \"../../actions/profileAction\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ProfileActions from \"./ProfileActions\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n    this.props.getCurrentProfile();\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    const { user } = this.props.auth;\r\n    const { profile, loading } = this.props.profile;\r\n\r\n    let dashboardContent;\r\n    if (profile === null || loading) {\r\n      dashboardContent = <Spinner />;\r\n    } else {\r\n      //check for profile\r\n      if (Object.keys(profile).length > 0) {\r\n        //user has profile\r\n        dashboardContent = (\r\n          <div className=\"mt-3\">\r\n            <h3>\r\n              Welcome{\" \"}\r\n              <small className=\"muted\">\r\n                <Link to={`/profile/${profile.handle}`}> {user.name} </Link>\r\n              </small>\r\n            </h3>\r\n          </div>\r\n        );\r\n      } else {\r\n        dashboardContent = (\r\n          <div className=\"mt-3\">\r\n            <h3>\r\n              Welcome <small className=\"muted\">{user.name}</small>\r\n            </h3>\r\n            <p className=\"muted\">\r\n              You have not set profile yet. You can create a new profile{\" \"}\r\n              <Link to=\"/create-profile\">here</Link>.\r\n            </p>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"main_height\">\r\n        <div className=\"container mt-4\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 mx-auto\">\r\n              <div className=\"display-4 text-center\">Dashboard</div>\r\n\r\n              {dashboardContent}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nDashboard.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n\r\n  getCurrentProfile: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getCurrentProfile }\r\n)(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}