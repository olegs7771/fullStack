{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { userIsAuthenticated, userIsNotAuthenticated } from \"./authWrapper\"; //setting localStorage for storing currentUser\n\nimport jwt_decode from \"jwt-decode\"; //decode token\n\nimport setAuthToken from \"./utils/setAuthToken\"; // setting  token to header as Authorization( like in postman)\n\nimport { setCurrentUser } from \"./actions/authAction\"; //will send action to set state auth.user:{}\n\nimport { clearCurrentProfile } from \"./actions/profileAction\"; //redux\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Header from \"./components/layout/Header\";\nimport Main from \"./components/layout/Main\";\nimport Footer from \"./components/layout/Footer\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport CreateProfile from \"./components/create-profile/CreateProfile\";\nimport \"./App.css\"; //check for token\n\nif (localStorage.jwtToken) {\n  //Set auth token header auth\n  setAuthToken(localStorage.jwtToken); //decode token and get user info and exp\n\n  var decoded = jwt_decode(localStorage.jwtToken); //set currentUser to auth.user in redux state and  Authenticate\n\n  store.dispatch(setCurrentUser(decoded)); //check for expired token\n\n  var currentTime = Date.now() / 1000;\n\n  if (decoded.exp < currentTime) {\n    //logout user\n    store.dispatch(clearCurrentProfile()); //   //redirect to login\n    //   window.location.href = \"/main\";\n\n    localStorage.removeItem(\"jwtToken\");\n  }\n}\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: Main,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/register\",\n        component: Register,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        component: userIsNotAuthenticated(Login),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/dashboard\",\n        component: userIsAuthenticated(Dashboard),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/create-profile\",\n        component: userIsAuthenticated(CreateProfile),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }))), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\oleg\\fullStack\\fullStack\\client\\src\\App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","userIsAuthenticated","userIsNotAuthenticated","jwt_decode","setAuthToken","setCurrentUser","clearCurrentProfile","Provider","store","Header","Main","Footer","Register","Login","Dashboard","CreateProfile","localStorage","jwtToken","decoded","dispatch","currentTime","Date","now","exp","removeItem","App"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { userIsAuthenticated, userIsNotAuthenticated } from \"./authWrapper\";\r\n//setting localStorage for storing currentUser\r\nimport jwt_decode from \"jwt-decode\"; //decode token\r\nimport setAuthToken from \"./utils/setAuthToken\"; // setting  token to header as Authorization( like in postman)\r\nimport { setCurrentUser } from \"./actions/authAction\"; //will send action to set state auth.user:{}\r\nimport { clearCurrentProfile } from \"./actions/profileAction\";\r\n\r\n//redux\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport Header from \"./components/layout/Header\";\r\nimport Main from \"./components/layout/Main\";\r\nimport Footer from \"./components/layout/Footer\";\r\nimport Register from \"./components/auth/Register\";\r\nimport Login from \"./components/auth/Login\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport CreateProfile from \"./components/create-profile/CreateProfile\";\r\nimport \"./App.css\";\r\n\r\n//check for token\r\nif (localStorage.jwtToken) {\r\n  //Set auth token header auth\r\n  setAuthToken(localStorage.jwtToken);\r\n  //decode token and get user info and exp\r\n  const decoded = jwt_decode(localStorage.jwtToken);\r\n  //set currentUser to auth.user in redux state and  Authenticate\r\n  store.dispatch(setCurrentUser(decoded));\r\n\r\n  //check for expired token\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded.exp < currentTime) {\r\n    //logout user\r\n    store.dispatch(clearCurrentProfile());\r\n    //   //redirect to login\r\n    //   window.location.href = \"/main\";\r\n    localStorage.removeItem(\"jwtToken\");\r\n  }\r\n}\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header />\r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Main} />\r\n                <Route exact path=\"/register\" component={Register} />\r\n                <Route\r\n                  exact\r\n                  path=\"/login\"\r\n                  component={userIsNotAuthenticated(Login)}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/dashboard\"\r\n                  component={userIsAuthenticated(Dashboard)}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/create-profile\"\r\n                  component={userIsAuthenticated(CreateProfile)}\r\n                />\r\n              </Switch>\r\n            </div>\r\n            <Footer />\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}