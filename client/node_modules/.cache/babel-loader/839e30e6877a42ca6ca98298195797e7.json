{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\src\\\\components\\\\posts\\\\Posts.js\";\nimport React, { Component } from \"react\";\nimport PostForm from \"./PostForm\";\nimport PostFeed from \"./PostFeed\";\nimport Spinner from \"../layout/Spinner\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getPosts } from \"../../actions/postAction\";\n\nvar Posts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Posts, _Component);\n\n  function Posts() {\n    _classCallCheck(this, Posts);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Posts).apply(this, arguments));\n  }\n\n  _createClass(Posts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$post = this.props.post,\n          posts = _this$props$post.posts,\n          loading = _this$props$post.loading;\n      var postContent;\n\n      if (posts === null || loading) {\n        postContent = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        });\n      } else {\n        // {posts state got posts from db}\n        postContent = React.createElement(PostFeed, {\n          posts: posts,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(PostForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, postContent))));\n    }\n  }]);\n\n  return Posts;\n}(Component);\n\nPosts.propTypes = {\n  post: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    post: state.post\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPosts: getPosts\n})(Posts);","map":{"version":3,"sources":["C:\\Users\\oleg\\fullStack\\fullStack\\client\\src\\components\\posts\\Posts.js"],"names":["React","Component","PostForm","PostFeed","Spinner","connect","PropTypes","getPosts","Posts","props","post","posts","loading","postContent","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,0BAAzB;;IAEMC,K;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWF,QAAX;AACD;;;6BAEQ;AAAA,6BACoB,KAAKE,KAAL,CAAWC,IAD/B;AAAA,UACCC,KADD,oBACCA,KADD;AAAA,UACQC,OADR,oBACQA,OADR;AAGP,UAAIC,WAAJ;;AAEA,UAAIF,KAAK,KAAK,IAAV,IAAkBC,OAAtB,EAA+B;AAC7BC,QAAAA,WAAW,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AACD,OAFD,MAEO;AACL;AACAA,QAAAA,WAAW,GAAG,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AACD;;AACD,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BE,WAA3B,CAJF,CADF,CADF,CADF;AAYD;;;;EA5BiBZ,S;;AA8BpBO,KAAK,CAACM,SAAN,GAAkB;AAChBJ,EAAAA,IAAI,EAAEJ,SAAS,CAACS,MAAV,CAAiBC;AADP,CAAlB;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCR,IAAAA,IAAI,EAAEQ,KAAK,CAACR;AADoB,GAAL;AAAA,CAA7B;;AAIA,eAAeL,OAAO,CACpBY,eADoB,EAEpB;AAAEV,EAAAA,QAAQ,EAARA;AAAF,CAFoB,CAAP,CAGbC,KAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport PostForm from \"./PostForm\";\r\nimport PostFeed from \"./PostFeed\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getPosts } from \"../../actions/postAction\";\r\n\r\nclass Posts extends Component {\r\n  componentDidMount() {\r\n    this.props.getPosts();\r\n  }\r\n\r\n  render() {\r\n    const { posts, loading } = this.props.post;\r\n\r\n    let postContent;\r\n\r\n    if (posts === null || loading) {\r\n      postContent = <Spinner />;\r\n    } else {\r\n      // {posts state got posts from db}\r\n      postContent = <PostFeed posts={posts} />;\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <PostForm />\r\n            </div>\r\n            <div className=\"col-md-6\">{postContent}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nPosts.propTypes = {\r\n  post: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getPosts }\r\n)(Posts);\r\n"]},"metadata":{},"sourceType":"module"}