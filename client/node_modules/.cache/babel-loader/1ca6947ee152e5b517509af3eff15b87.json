{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\src\\\\components\\\\auth\\\\Register.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authAction\";\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Register)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      password1: \"\",\n      password2: \"\",\n      errors: {}\n    };\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.onSubmitRegister = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          password1 = _this$state.password1,\n          password2 = _this$state.password2;\n      var newUser = {\n        name: name,\n        email: email,\n        password1: password1,\n        password2: password2\n      };\n\n      _this.props.registerUser(newUser);\n    };\n\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var user = this.props.auth.user;\n      console.log(this.props.errors);\n      var _this$state2 = this.state,\n          name = _this$state2.name,\n          email = _this$state2.email,\n          password1 = _this$state2.password1,\n          password2 = _this$state2.password2;\n      console.log(errors);\n      return React.createElement(\"div\", {\n        className: \"register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6 mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header text-center h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmitRegister,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"group-control \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": errors.name\n        }),\n        name: \"name\",\n        value: name,\n        placeholder: \"Name...\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), errors.name && React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, errors.name)), React.createElement(\"div\", {\n        className: \"group-control \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        type: \"email\",\n        className: classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": errors.email\n        }),\n        name: \"email\",\n        value: email,\n        placeholder: \"Email...\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), errors.email && React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, errors.email)), React.createElement(\"div\", {\n        className: \"group-control \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": errors.password1\n        }),\n        name: \"password1\",\n        value: password1,\n        placeholder: \"Password...\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), errors.password1 && React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, errors.password1)), React.createElement(\"div\", {\n        className: \"group-control \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": errors.password2\n        }),\n        name: \"password2\",\n        value: password2,\n        placeholder: \"Confirm Password...\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), errors.password2 && React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, errors.password2)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-secondary btn-lg\\r \",\n        value: \"Register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }))))))));\n    }\n  }], [{\n    key: \"getStateFromProps\",\n    value: function getStateFromProps(state, props) {\n      console.log(state);\n      console.log(props);\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nRegister.proptypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  registerUser: registerUser\n})(Register);","map":{"version":3,"sources":["C:\\Users\\oleg\\fullStack\\fullStack\\client\\src\\components\\auth\\Register.js"],"names":["React","Component","PropTypes","classnames","connect","registerUser","Register","state","name","email","password1","password2","errors","onChange","e","setState","target","value","onSubmitRegister","preventDefault","newUser","props","user","auth","console","log","proptypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classnames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authAction\";\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password1: \"\",\r\n    password2: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmitRegister = e => {\r\n    e.preventDefault();\r\n    const { name, email, password1, password2 } = this.state;\r\n    const newUser = {\r\n      name,\r\n      email,\r\n      password1,\r\n      password2\r\n    };\r\n    this.props.registerUser(newUser);\r\n  };\r\n\r\n  static getStateFromProps(state, props) {\r\n    console.log(state);\r\n    console.log(props);\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n\r\n    console.log(this.props.errors);\r\n\r\n    const { name, email, password1, password2 } = this.state;\r\n    console.log(errors);\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 mx-auto\">\r\n            <br />\r\n            <div className=\"card\">\r\n              <div className=\"card-header text-center h4\">Register</div>\r\n              <div className=\"card-body\">\r\n                <div className=\"container\">\r\n                  <form onSubmit={this.onSubmitRegister}>\r\n                    <div className=\"group-control \">\r\n                      <label>Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.name\r\n                        })}\r\n                        name=\"name\"\r\n                        value={name}\r\n                        placeholder=\"Name...\"\r\n                        onChange={this.onChange}\r\n                      />\r\n                      {errors.name && (\r\n                        <div className=\"invalid-feedback\">{errors.name}</div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"group-control \">\r\n                      <label>Email</label>\r\n                      <input\r\n                        type=\"email\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.email\r\n                        })}\r\n                        name=\"email\"\r\n                        value={email}\r\n                        placeholder=\"Email...\"\r\n                        onChange={this.onChange}\r\n                      />\r\n                      {errors.email && (\r\n                        <div className=\"invalid-feedback\">{errors.email}</div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"group-control \">\r\n                      <label>Password</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.password1\r\n                        })}\r\n                        name=\"password1\"\r\n                        value={password1}\r\n                        placeholder=\"Password...\"\r\n                        onChange={this.onChange}\r\n                      />\r\n                      {errors.password1 && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.password1}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"group-control \">\r\n                      <label>Confirm Password</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.password2\r\n                        })}\r\n                        name=\"password2\"\r\n                        value={password2}\r\n                        placeholder=\"Confirm Password...\"\r\n                        onChange={this.onChange}\r\n                      />\r\n                      {errors.password2 && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.password2}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <br />\r\n                    <input\r\n                      type=\"submit\"\r\n                      className=\"btn btn-secondary btn-lg\r\n                      \"\r\n                      value=\"Register\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.proptypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(Register);\r\n"]},"metadata":{},"sourceType":"module"}