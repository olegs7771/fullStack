{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\src\\\\components\\\\developers\\\\Developers.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllProfiles } from \"../../actions/profileAction\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"../layout/Spinner\";\nimport Profile from \"./Profile\";\n\nvar Developers =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Developers, _Component);\n\n  function Developers() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Developers);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Developers)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showprofiles: false,\n      errors: {},\n      profiles: null\n    };\n    return _this;\n  }\n\n  _createClass(Developers, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getAllProfiles();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$profile = this.props.profile,\n          profiles = _this$props$profile.profiles,\n          loading = _this$props$profile.loading;\n      var profileItem;\n\n      if (profiles === null || loading) {\n        profileItem = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }); //no profiles only loading is true\n      } else {\n        if (profiles.length > 0) {\n          //profiles is array so we check with length\n          return profiles.map(function (profile, id) {\n            return React.createElement(Profile, {\n              key: id,\n              handle: profile.handle,\n              status: profile.status,\n              skills: profile.skills,\n              company: profile.company,\n              location: profile.location,\n              website: profile.website,\n              githubuser: profile.githubuser,\n              avatar: profile.user.avatar,\n              userName: profile.user.name,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41\n              },\n              __self: this\n            });\n          });\n        } else {\n          profileItem = React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, \"No profiles to show\");\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container my-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12 mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Developers profiles\"), React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Browse and Connect with other Developers\"), profileItem)));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (props.errors !== state.errors) {\n        return {\n          errors: props.errors\n        };\n      }\n\n      console.log(state.errors);\n      return null;\n    }\n  }]);\n\n  return Developers;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile,\n    errors: state.errors\n  };\n};\n\nDevelopers.propTypes = {\n  profile: PropTypes.object.isRequired,\n  getAllProfiles: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  getAllProfiles: getAllProfiles\n})(Developers);","map":{"version":3,"sources":["C:\\Users\\oleg\\fullStack\\fullStack\\client\\src\\components\\developers\\Developers.js"],"names":["React","Component","connect","getAllProfiles","PropTypes","Spinner","Profile","Developers","state","showprofiles","errors","profiles","props","profile","loading","profileItem","length","map","id","handle","status","skills","company","location","website","githubuser","user","avatar","name","console","log","mapStateToProps","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAllProfiles } from \"../../actions/profileAction\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport Profile from \"./Profile\";\r\n\r\nclass Developers extends Component {\r\n  state = {\r\n    showprofiles: false,\r\n    errors: {},\r\n    profiles: null\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.errors !== state.errors) {\r\n      return {\r\n        errors: props.errors\r\n      };\r\n    }\r\n    console.log(state.errors);\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getAllProfiles();\r\n  }\r\n\r\n  render() {\r\n    const { profiles, loading } = this.props.profile;\r\n\r\n    let profileItem;\r\n\r\n    if (profiles === null || loading) {\r\n      profileItem = <Spinner />; //no profiles only loading is true\r\n    } else {\r\n      if (profiles.length > 0) {\r\n        //profiles is array so we check with length\r\n        return profiles.map((profile, id) => (\r\n          <Profile\r\n            key={id}\r\n            handle={profile.handle}\r\n            status={profile.status}\r\n            skills={profile.skills}\r\n            company={profile.company}\r\n            location={profile.location}\r\n            website={profile.website}\r\n            githubuser={profile.githubuser}\r\n            avatar={profile.user.avatar}\r\n            userName={profile.user.name}\r\n          />\r\n        ));\r\n      } else {\r\n        profileItem = <h4>No profiles to show</h4>;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container my-4\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 mx-auto\">\r\n            <h4 className=\"text-center\">Developers profiles</h4>\r\n            <p className=\"text-center\">\r\n              Browse and Connect with other Developers\r\n            </p>\r\n            {profileItem}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  errors: state.errors\r\n});\r\n\r\nDevelopers.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  getAllProfiles: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getAllProfiles }\r\n)(Developers);\r\n"]},"metadata":{},"sourceType":"module"}