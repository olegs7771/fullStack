{"ast":null,"code":"import axios from \"axios\";\nimport { POST_LOADING, GET_POSTS, ADD_POST, DELETE_POST, GET_ERRORS } from \"./types\"; // Add Post\n\nexport var addPost = function addPost(newPost, history) {\n  return function (dispatch) {\n    axios.post(\"/api/posts/newpost\", newPost).then(function (res) {\n      dispatch({\n        type: ADD_POST,\n        payload: res.data\n      });\n    }).then(function () {\n      return history.push(\"/post_success\");\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\oleg\\fullStack\\fullStack\\client\\src\\actions\\postAction.js"],"names":["axios","POST_LOADING","GET_POSTS","ADD_POST","DELETE_POST","GET_ERRORS","addPost","newPost","history","dispatch","post","then","res","type","payload","data","push","catch","err","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,YADF,EAEEC,SAFF,EAGEC,QAHF,EAIEC,WAJF,EAKEC,UALF,QAMO,SANP,C,CAQA;;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,OAAD,EAAUC,OAAV;AAAA,SAAsB,UAAAC,QAAQ,EAAI;AACvDT,IAAAA,KAAK,CACFU,IADH,CACQ,oBADR,EAC8BH,OAD9B,EAEGI,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACXH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEV,QADC;AAEPW,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,OAAD,CAAR;AAID,KAPH,EAQGJ,IARH,CAQQ;AAAA,aAAMH,OAAO,CAACQ,IAAR,CAAa,eAAb,CAAN;AAAA,KARR,EASGC,KATH,CASS,UAAAC,GAAG,EAAI;AACZT,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAER,UADC;AAEPS,QAAAA,OAAO,EAAEI,GAAG,CAACC,QAAJ,CAAaJ;AAFf,OAAD,CAAR;AAID,KAdH;AAeD,GAhBsB;AAAA,CAAhB","sourcesContent":["import axios from \"axios\";\r\n\r\nimport {\r\n  POST_LOADING,\r\n  GET_POSTS,\r\n  ADD_POST,\r\n  DELETE_POST,\r\n  GET_ERRORS\r\n} from \"./types\";\r\n\r\n// Add Post\r\n\r\nexport const addPost = (newPost, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/posts/newpost\", newPost)\r\n    .then(res => {\r\n      dispatch({\r\n        type: ADD_POST,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .then(() => history.push(\"/post_success\"))\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}