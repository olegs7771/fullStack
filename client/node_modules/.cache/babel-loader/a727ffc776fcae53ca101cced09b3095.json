{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\src\\\\components\\\\posts\\\\PostForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport TextAreaForm from \"../common/TextAreaForm\";\nimport PropTypes from \"prop-types\";\nimport { addPost } from \"../../actions/postAction\";\nimport isEmpty from \"../../validation/is_Empty\";\n\nvar PostForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostForm, _Component);\n\n  function PostForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      text: \"\",\n      errors: {}\n    };\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.handleAddPost = function (e) {\n      var text = _this.state.text;\n      var newPost = {\n        text: text\n      };\n\n      _this.props.addPost(newPost, _this.props.history);\n\n      console.log(newPost);\n    };\n\n    return _this;\n  }\n\n  _createClass(PostForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          text = _this$state.text,\n          errors = _this$state.errors;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Compose Post\"), React.createElement(TextAreaForm, {\n        name: \"text\",\n        value: text,\n        placeholder: \"Your Post Here...\",\n        onChange: this.onChange,\n        info: \"You can share your post with everyone\",\n        error: errors.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-dark mx-auto d-block my-3\",\n        onClick: this.handleAddPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Send Post\")));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (state.errors !== props.errors) {\n        return {\n          errors: props.errors\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return PostForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    post: state.post,\n    errors: state.errors,\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addPost: addPost\n})(withRouter(PostForm));","map":{"version":3,"sources":["C:\\Users\\oleg\\fullStack\\fullStack\\client\\src\\components\\posts\\PostForm.js"],"names":["React","Component","connect","withRouter","TextAreaForm","PropTypes","addPost","isEmpty","PostForm","state","text","errors","onChange","e","setState","target","name","value","handleAddPost","newPost","props","history","console","log","mapStateToProps","post","auth"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,MAAM,EAAE;AAFF,K;;UAKRC,Q,GAAW,UAAAC,CAAC,EAAI;AACd,YAAKC,QAAL,qBACGD,CAAC,CAACE,MAAF,CAASC,IADZ,EACmBH,CAAC,CAACE,MAAF,CAASE,KAD5B;AAGD,K;;UAEDC,a,GAAgB,UAAAL,CAAC,EAAI;AAAA,UACXH,IADW,GACF,MAAKD,KADH,CACXC,IADW;AAGnB,UAAMS,OAAO,GAAG;AACdT,QAAAA,IAAI,EAAJA;AADc,OAAhB;;AAGA,YAAKU,KAAL,CAAWd,OAAX,CAAmBa,OAAnB,EAA4B,MAAKC,KAAL,CAAWC,OAAvC;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACD,K;;;;;;;6BAWQ;AAAA,wBACkB,KAAKV,KADvB;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,MADP,eACOA,MADP;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,YAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAED,IAFT;AAGE,QAAA,WAAW,EAAC,mBAHd;AAIE,QAAA,QAAQ,EAAE,KAAKE,QAJjB;AAKE,QAAA,IAAI,EAAC,uCALP;AAME,QAAA,KAAK,EAAED,MAAM,CAACD,IANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAUE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,mCADZ;AAEE,QAAA,OAAO,EAAE,KAAKQ,aAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAVF,CADF;AAqBD;;;6CAhC+BE,K,EAAOX,K,EAAO;AAC5C,UAAIA,KAAK,CAACE,MAAN,KAAiBS,KAAK,CAACT,MAA3B,EAAmC;AACjC,eAAO;AACLA,UAAAA,MAAM,EAAES,KAAK,CAACT;AADT,SAAP;AAGD;;AACD,aAAO,IAAP;AACD;;;;EA7BoBV,S;;AAyDvB,IAAMuB,eAAe,GAAG,SAAlBA,eAAkB,CAAAf,KAAK;AAAA,SAAK;AAChCgB,IAAAA,IAAI,EAAEhB,KAAK,CAACgB,IADoB;AAEhCd,IAAAA,MAAM,EAAEF,KAAK,CAACE,MAFkB;AAGhCe,IAAAA,IAAI,EAAEjB,KAAK,CAACiB;AAHoB,GAAL;AAAA,CAA7B;;AAMA,eAAexB,OAAO,CACpBsB,eADoB,EAEpB;AAAElB,EAAAA,OAAO,EAAPA;AAAF,CAFoB,CAAP,CAGbH,UAAU,CAACK,QAAD,CAHG,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport TextAreaForm from \"../common/TextAreaForm\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addPost } from \"../../actions/postAction\";\r\nimport isEmpty from \"../../validation/is_Empty\";\r\n\r\nclass PostForm extends Component {\r\n  state = {\r\n    text: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleAddPost = e => {\r\n    const { text } = this.state;\r\n\r\n    const newPost = {\r\n      text\r\n    };\r\n    this.props.addPost(newPost, this.props.history);\r\n    console.log(newPost);\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (state.errors !== props.errors) {\r\n      return {\r\n        errors: props.errors\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const { text, errors } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"text-center h4\">Compose Post</div>\r\n        <TextAreaForm\r\n          name=\"text\"\r\n          value={text}\r\n          placeholder=\"Your Post Here...\"\r\n          onChange={this.onChange}\r\n          info=\"You can share your post with everyone\"\r\n          error={errors.text}\r\n        />\r\n        <div className=\"mx-auto\">\r\n          <button\r\n            className=\"btn btn-dark mx-auto d-block my-3\"\r\n            onClick={this.handleAddPost}\r\n          >\r\n            Send Post\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post,\r\n  errors: state.errors,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addPost }\r\n)(withRouter(PostForm));\r\n"]},"metadata":{},"sourceType":"module"}