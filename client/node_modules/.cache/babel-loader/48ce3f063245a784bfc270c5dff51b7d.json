{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\oleg\\\\fullStack\\\\fullStack\\\\client\\\\src\\\\components\\\\addCredentials\\\\AddExperience.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getCurrentProfile, editExperience } from \"../../actions/profileAction\";\nimport TextInputForm from \"../common/TextInputForm\";\nimport TextAreaForm from \"../common/TextAreaForm\";\nimport CheckInputForm from \"../common/CheckInputForm\";\n\nvar AddExperience =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddExperience, _Component);\n\n  function AddExperience() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddExperience);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddExperience)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      title: \"\",\n      company: \"\",\n      location: \"\",\n      from: \"\",\n      to: \"\",\n      current: false,\n      description: \"\",\n      errors: {}\n    };\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.handlerShowFormTo = function (e) {\n      console.log(\"clicked\");\n\n      _this.setState(_defineProperty({}, e.target.name, e.target.checked));\n    };\n\n    _this.handleSubmitExp = function (e) {\n      //field 'to' will receive string 'present' if current:true\n      if (_this.state.current === true) {\n        _this.setState({\n          to: Date.now()\n        });\n      } else {\n        _this.setState({\n          to: _this.state.to\n        });\n      }\n\n      e.preventDefault();\n      var newExp = {\n        title: _this.state.title,\n        company: _this.state.company,\n        from: _this.state.from,\n        to: _this.state.to,\n        description: _this.state.description\n      };\n\n      _this.props.editExperience(newExp, _this.props.history);\n\n      console.log(newExp);\n      console.log(_this.state.current);\n    };\n\n    return _this;\n  }\n\n  _createClass(AddExperience, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getCurrentProfile();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var profile = this.props.profile.profile;\n      var expForm;\n\n      if (profile === null) {\n        expForm = React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"Loading..\");\n      } else {\n        expForm = React.createElement(\"span\", {\n          className: \"lead\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \" \", \"Dear \", profile.handle, \" add some experience here\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main_height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12 mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-heading text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, expForm), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.submitFromExp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(TextInputForm, {\n        name: \"title\",\n        value: this.state.title,\n        placeholder: \"Title\",\n        onChange: this.onChange,\n        info: \"Put here the your title at the company \",\n        error: this.state.errors.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(TextInputForm, {\n        name: \"company\",\n        value: this.state.company,\n        placeholder: \"Company\",\n        onChange: this.onChange,\n        info: \"Put here the name of the company or organization that you have been  working at\",\n        error: this.state.errors.company,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(TextInputForm, {\n        name: \"location\",\n        value: this.state.location,\n        placeholder: \"Location or Address\",\n        onChange: this.onChange,\n        error: this.state.errors.location,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(TextInputForm, {\n        name: \"from\",\n        type: \"date\",\n        value: this.state.from,\n        placeholder: \"From\",\n        onChange: this.onChange,\n        info: this.state.currentlyEmployed,\n        error: this.state.errors.from,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Currently employed\"), React.createElement(\"div\", {\n        className: \"col-sm-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \" \", React.createElement(CheckInputForm, {\n        name: \"current\",\n        checked: this.state.current,\n        onChange: this.handlerShowFormTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }))), !this.state.current ? React.createElement(TextInputForm, {\n        name: \"to\",\n        type: \"date\",\n        value: this.state.to,\n        placeholder: \"to\",\n        onChange: this.onChange,\n        info: \"\",\n        error: this.state.errors.to,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }) : null, React.createElement(TextAreaForm, {\n        name: \"description\",\n        value: this.state.description,\n        onChange: this.onChange,\n        placeholder: \"Describe your position\",\n        error: this.state.errors.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-light btn-block mt-3\",\n        onClick: this.handleSubmitExp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Submit\")))))))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    //checking for props change( errors)\n    value: function getDerivedStateFromProps(props, state) {\n      if (props.errors !== state.errors) {\n        return {\n          errors: props.errors\n        };\n      } else {\n        return null;\n      }\n    } //show To form\n\n  }]);\n\n  return AddExperience;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile: getCurrentProfile,\n  editExperience: editExperience\n})(withRouter(AddExperience));","map":{"version":3,"sources":["C:\\Users\\oleg\\fullStack\\fullStack\\client\\src\\components\\addCredentials\\AddExperience.js"],"names":["React","Component","withRouter","connect","getCurrentProfile","editExperience","TextInputForm","TextAreaForm","CheckInputForm","AddExperience","state","title","company","location","from","to","current","description","errors","onChange","e","setState","target","name","value","handlerShowFormTo","console","log","checked","handleSubmitExp","Date","now","preventDefault","newExp","props","history","profile","expForm","handle","submitFromExp","currentlyEmployed","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentProfile, editExperience } from \"../../actions/profileAction\";\r\nimport TextInputForm from \"../common/TextInputForm\";\r\nimport TextAreaForm from \"../common/TextAreaForm\";\r\nimport CheckInputForm from \"../common/CheckInputForm\";\r\n\r\nclass AddExperience extends Component {\r\n  state = {\r\n    title: \"\",\r\n    company: \"\",\r\n    location: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n    current: false,\r\n    description: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getCurrentProfile();\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  //checking for props change( errors)\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.errors !== state.errors) {\r\n      return {\r\n        errors: props.errors\r\n      };\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  //show To form\r\n  handlerShowFormTo = e => {\r\n    console.log(\"clicked\");\r\n\r\n    this.setState({\r\n      [e.target.name]: e.target.checked\r\n    });\r\n  };\r\n\r\n  //submitting experience array form\r\n\r\n  handleSubmitExp = e => {\r\n    //field 'to' will receive string 'present' if current:true\r\n    if (this.state.current === true) {\r\n      this.setState({\r\n        to: Date.now()\r\n      });\r\n    } else {\r\n      this.setState({\r\n        to: this.state.to\r\n      });\r\n    }\r\n\r\n    e.preventDefault();\r\n    const newExp = {\r\n      title: this.state.title,\r\n      company: this.state.company,\r\n      from: this.state.from,\r\n      to: this.state.to,\r\n      description: this.state.description\r\n    };\r\n\r\n    this.props.editExperience(newExp, this.props.history);\r\n    console.log(newExp);\r\n    console.log(this.state.current);\r\n  };\r\n\r\n  render() {\r\n    const { profile } = this.props.profile;\r\n    let expForm;\r\n\r\n    if (profile === null) {\r\n      expForm = <h4>Loading..</h4>;\r\n    } else {\r\n      expForm = (\r\n        <span className=\"lead\">\r\n          {\" \"}\r\n          Dear {profile.handle} add some experience here\r\n        </span>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"main_height\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 mx-auto\">\r\n              <div className=\"card mt-4\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"card-heading text-center\">{expForm}</div>\r\n                  <div className=\"container\">\r\n                    <form onSubmit={this.submitFromExp}>\r\n                      <TextInputForm\r\n                        name=\"title\"\r\n                        value={this.state.title}\r\n                        placeholder=\"Title\"\r\n                        onChange={this.onChange}\r\n                        info=\"Put here the your title at the company \"\r\n                        error={this.state.errors.title}\r\n                      />\r\n                      <TextInputForm\r\n                        name=\"company\"\r\n                        value={this.state.company}\r\n                        placeholder=\"Company\"\r\n                        onChange={this.onChange}\r\n                        info=\"Put here the name of the company or organization that you have been  working at\"\r\n                        error={this.state.errors.company}\r\n                      />\r\n                      <TextInputForm\r\n                        name=\"location\"\r\n                        value={this.state.location}\r\n                        placeholder=\"Location or Address\"\r\n                        onChange={this.onChange}\r\n                        error={this.state.errors.location}\r\n                      />\r\n\r\n                      <TextInputForm\r\n                        name=\"from\"\r\n                        type=\"date\"\r\n                        value={this.state.from}\r\n                        placeholder=\"From\"\r\n                        onChange={this.onChange}\r\n                        info={this.state.currentlyEmployed}\r\n                        error={this.state.errors.from}\r\n                      />\r\n\r\n                      <div className=\"row\">\r\n                        <div className=\"col-sm-8\">Currently employed</div>\r\n                        <div className=\"col-sm-4\">\r\n                          {\" \"}\r\n                          <CheckInputForm\r\n                            name=\"current\"\r\n                            checked={this.state.current}\r\n                            onChange={this.handlerShowFormTo}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {!this.state.current ? (\r\n                        <TextInputForm\r\n                          name=\"to\"\r\n                          type=\"date\"\r\n                          value={this.state.to}\r\n                          placeholder=\"to\"\r\n                          onChange={this.onChange}\r\n                          info=\"\"\r\n                          error={this.state.errors.to}\r\n                        />\r\n                      ) : null}\r\n                      <TextAreaForm\r\n                        name=\"description\"\r\n                        value={this.state.description}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Describe your position\"\r\n                        error={this.state.errors.description}\r\n                      />\r\n\r\n                      <button\r\n                        className=\"btn btn-light btn-block mt-3\"\r\n                        onClick={this.handleSubmitExp}\r\n                      >\r\n                        Submit\r\n                      </button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getCurrentProfile, editExperience }\r\n)(withRouter(AddExperience));\r\n"]},"metadata":{},"sourceType":"module"}