{"ast":null,"code":"//This action will hit api/profile/current and bring user's profile from token\nimport axios from \"axios\";\nimport { GET_PROFILE, PROFILE_LOADING, GET_ERRORS, CLEAR_CURRENT_PROFILE, UPDATE_CURRENT_PROFILE, GET_PROFILES, SET_CURRENT_USER } from \"./types\"; //get current profile\n\nexport var getCurrentProfile = function getCurrentProfile() {\n  return function (dispatch) {\n    dispatch(setProfileLoading());\n    axios.get(\"/api/profile/current\").then(function (res) {\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_PROFILE,\n        payload: {}\n      });\n    });\n  };\n}; //Profile loading\n\nexport var setProfileLoading = function setProfileLoading() {\n  return {\n    type: PROFILE_LOADING\n  };\n}; //Clear Profile\n\nexport var clearCurrentProfile = function clearCurrentProfile() {\n  return {\n    type: CLEAR_CURRENT_PROFILE\n  };\n}; //create or update current user profile\n\nexport var registerCurrentProfile = function registerCurrentProfile(newProfile, history) {\n  return function (dispatch) {\n    axios.post(\"/api/profile/update\", newProfile).then(function (res) {\n      dispatch({\n        type: UPDATE_CURRENT_PROFILE,\n        payload: res.data\n      });\n    }).then(function () {\n      return history.push(\"/dashboard\");\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //edit experience in current profile\n\nexport var editExperience = function editExperience(_id, history, newExp) {}; //get all profiles\n\nexport var getAllProfiles = function getAllProfiles() {\n  return function (dispatch) {\n    axios.get(\"/api/profile/all\").then(function (res) {\n      dispatch({\n        type: GET_PROFILES,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //delete account and profile\n\nexport var deleteProfile = function deleteProfile(_id, history) {\n  return function (dispatch) {\n    if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\n      axios.delete(\"/api/profile/delete/:id\").then(function (res) {\n        dispatch({\n          type: SET_CURRENT_USER,\n          payload: {}\n        });\n      }).catch(function (err) {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n      });\n    }\n  };\n};","map":{"version":3,"sources":["C:\\Users\\oleg\\fullStack\\fullStack\\client\\src\\actions\\profileAction.js"],"names":["axios","GET_PROFILE","PROFILE_LOADING","GET_ERRORS","CLEAR_CURRENT_PROFILE","UPDATE_CURRENT_PROFILE","GET_PROFILES","SET_CURRENT_USER","getCurrentProfile","dispatch","setProfileLoading","get","then","res","type","payload","data","catch","err","clearCurrentProfile","registerCurrentProfile","newProfile","history","post","push","response","editExperience","_id","newExp","getAllProfiles","deleteProfile","window","confirm","delete"],"mappings":"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","sourcesContent":["//This action will hit api/profile/current and bring user's profile from token\r\n\r\nimport axios from \"axios\";\r\nimport {\r\n  GET_PROFILE,\r\n  PROFILE_LOADING,\r\n  GET_ERRORS,\r\n  CLEAR_CURRENT_PROFILE,\r\n  UPDATE_CURRENT_PROFILE,\r\n  GET_PROFILES,\r\n  SET_CURRENT_USER\r\n} from \"./types\";\r\n\r\n//get current profile\r\nexport const getCurrentProfile = () => dispatch => {\r\n  dispatch(setProfileLoading());\r\n  axios\r\n    .get(\"/api/profile/current\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: {}\r\n      })\r\n    );\r\n};\r\n\r\n//Profile loading\r\nexport const setProfileLoading = () => {\r\n  return {\r\n    type: PROFILE_LOADING\r\n  };\r\n};\r\n//Clear Profile\r\nexport const clearCurrentProfile = () => {\r\n  return {\r\n    type: CLEAR_CURRENT_PROFILE\r\n  };\r\n};\r\n//create or update current user profile\r\n\r\nexport const registerCurrentProfile = (newProfile, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/profile/update\", newProfile)\r\n    .then(res => {\r\n      dispatch({\r\n        type: UPDATE_CURRENT_PROFILE,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .then(() => history.push(\"/dashboard\"))\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n//edit experience in current profile\r\nexport const editExperience = (_id, history, newExp) => {};\r\n\r\n//get all profiles\r\nexport const getAllProfiles = () => dispatch => {\r\n  axios\r\n    .get(\"/api/profile/all\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_PROFILES,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n\r\n//delete account and profile\r\n\r\nexport const deleteProfile = (_id, history) => dispatch => {\r\n  if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\r\n    axios\r\n      .delete(\"/api/profile/delete/:id\")\r\n      .then(res => {\r\n        dispatch({\r\n          type: SET_CURRENT_USER,\r\n          payload: {}\r\n        });\r\n      })\r\n      .catch(err => {\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        });\r\n      });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}